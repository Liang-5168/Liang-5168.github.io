<!doctype html>
<html lang="zh-Hant">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>人工智慧發展大事記：互動時間軸</title>
  <style>
    :root { 
      --maxw: 1000px; 
      --dur: 600ms; 
      --e: cubic-bezier(.2,.7,.2,1);
      --peak: #10b981;
      --valley: #ef4444;
      --neutral: #64748b;
    }
    
    * { box-sizing: border-box; }
    
    html, body { 
      margin: 0; 
      padding: 0; 
      font-family: system-ui, -apple-system, "Noto Sans TC", Segoe UI, Roboto, Arial, sans-serif; 
      color: #1e293b; 
      background: linear-gradient(to bottom, #0f172a 0%, #1e293b 100%);
      overflow-x: hidden;
    }
    
    header { 
      max-width: var(--maxw); 
      margin: 0 auto; 
      padding: 10vh 24px 8vh; 
      text-align: center; 
    }
    
    header h1 { 
      font-size: clamp(32px, 5vw, 56px); 
      margin: 0 0 16px; 
      background: linear-gradient(135deg, #60a5fa, #a78bfa, #ec4899);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      font-weight: 800;
      letter-spacing: -0.02em;
    }
    
    header p { 
      color: #94a3b8; 
      font-size: clamp(16px, 2vw, 20px);
      max-width: 600px;
      margin: 0 auto;
      line-height: 1.6;
    }

    .intro-section {
      max-width: var(--maxw);
      margin: 0 auto 12vh;
      padding: 0 24px;
      color: #cbd5e1;
      line-height: 1.8;
    }

    .intro-section p {
      margin-bottom: 1.5em;
    }

    .spacer { height: 12vh; }

    /* 1) 翻卡效果 - 研究里程碑卡片 -------------------------------- */
    .timeline-event {
      max-width: var(--maxw);
      margin: 0 auto 16vh;
      padding: 0 24px;
    }
    
    .flip-card {
      width: 100%;
      max-width: 800px;
      margin: 0 auto;
      perspective: 1500px;
    }
    
    .card-inner {
      position: relative;
      width: 100%;
      min-height: 400px;
      border-radius: 20px;
      transform-style: preserve-3d;
      transition: transform var(--dur) var(--e);
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.4);
    }
    
    .card-face {
      position: absolute;
      inset: 0;
      backface-visibility: hidden;
      border-radius: 20px;
      overflow: hidden;
    }
    
    .card-front {
      background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 100%);
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 40px;
    }
    
    .card-front img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 12px;
    }
    
    .card-front-placeholder {
      width: 100%;
      height: 100%;
      display: grid;
      place-items: center;
      background: linear-gradient(135deg, #4f46e5, #7c3aed);
      border-radius: 12px;
    }
    
    .card-front-placeholder h3 {
      font-size: clamp(24px, 3vw, 36px);
      color: white;
      margin: 0;
      text-align: center;
      padding: 20px;
    }
    
    .card-back {
      background: #ffffff;
      transform: rotateY(180deg);
      padding: 40px;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }
    
    .flip-card.flipped .card-inner {
      transform: rotateY(180deg);
    }
    
    .event-tag {
      display: inline-flex;
      align-items: center;
      gap: 6px;
      font-size: 13px;
      font-weight: 600;
      padding: 6px 14px;
      border-radius: 20px;
      margin-bottom: 16px;
      text-transform: uppercase;
      letter-spacing: 0.05em;
    }
    
    .tag-peak { background: #d1fae5; color: #065f46; }
    .tag-valley { background: #fee2e2; color: #991b1b; }
    .tag-progress { background: #dbeafe; color: #1e40af; }
    
    .event-year {
      font-size: 48px;
      font-weight: 800;
      color: #0f172a;
      margin: 0 0 12px;
      line-height: 1;
    }
    
    .event-title {
      font-size: 28px;
      font-weight: 700;
      color: #1e293b;
      margin: 0 0 20px;
      line-height: 1.3;
    }
    
    .event-description {
      color: #475569;
      line-height: 1.7;
      font-size: 16px;
    }
    
    .event-impact {
      margin-top: 24px;
      padding-top: 24px;
      border-top: 2px solid #e2e8f0;
    }
    
    .event-impact strong {
      color: #0f172a;
      display: block;
      margin-bottom: 8px;
    }

    /* 2) Focus Mode - 章節聚焦效果 -------------------------------- */
    .research-phase {
      max-width: var(--maxw);
      margin: 18vh auto;
      padding: clamp(24px, 4vw, 48px);
      background: rgba(255, 255, 255, 0.95);
      border-radius: 24px;
      box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);
      transition: filter var(--dur) var(--e), 
                  opacity var(--dur) var(--e),
                  transform var(--dur) var(--e);
      position: relative;
    }
    
    .research-phase::before {
      content: '';
      position: absolute;
      left: -4px;
      top: 20%;
      bottom: 20%;
      width: 4px;
      background: linear-gradient(to bottom, var(--peak), var(--valley));
      border-radius: 2px;
      opacity: 0;
      transition: opacity var(--dur) var(--e);
    }
    
    body.focus-mode .research-phase {
      filter: grayscale(0.7) saturate(0.5) brightness(0.85);
      opacity: 0.5;
      transform: scale(0.98);
    }
    
    body.focus-mode .research-phase.is-focal {
      filter: none;
      opacity: 1;
      transform: scale(1);
      box-shadow: 0 20px 60px rgba(99, 102, 241, 0.3);
    }
    
    body.focus-mode .research-phase.is-focal::before {
      opacity: 1;
    }
    
    .phase-header {
      display: flex;
      align-items: center;
      gap: 12px;
      margin-bottom: 20px;
    }
    
    .phase-period {
      font-size: 14px;
      font-weight: 600;
      color: #64748b;
      background: #f1f5f9;
      padding: 6px 12px;
      border-radius: 6px;
    }
    
    .phase-title {
      font-size: clamp(24px, 3.5vw, 36px);
      font-weight: 700;
      color: #0f172a;
      margin: 0 0 20px;
      line-height: 1.3;
    }
    
    .phase-content {
      color: #334155;
      line-height: 1.8;
      font-size: 17px;
    }
    
    .phase-content p {
      margin-bottom: 1.2em;
    }
    
    .key-researchers {
      margin-top: 24px;
      padding: 20px;
      background: #f8fafc;
      border-radius: 12px;
      border-left: 4px solid #6366f1;
    }
    
    .key-researchers strong {
      display: block;
      color: #1e293b;
      margin-bottom: 8px;
      font-size: 15px;
    }

    /* 3) 動態底線效果 - 關鍵詞強調 -------------------------------- */
    .highlight {
      position: relative;
      font-weight: 600;
      color: #4f46e5;
      background-image: linear-gradient(120deg, #a78bfa 0%, #6366f1 100%);
      background-repeat: no-repeat;
      background-position: 0 100%;
      background-size: 0% 3px;
      transition: background-size 500ms var(--e);
      padding-bottom: 2px;
    }
    
    .highlight.active {
      background-size: 100% 3px;
    }
    
    /* 額外：波動效果給特定高亮詞 */
    .highlight.wave {
      background-image: linear-gradient(120deg, #10b981 0%, #059669 100%);
    }
    
    .highlight.crisis {
      background-image: linear-gradient(120deg, #f43f5e 0%, #dc2626 100%);
      color: #dc2626;
    }

    footer {
      max-width: var(--maxw);
      margin: 0 auto;
      padding: 8vh 24px;
      text-align: center;
      color: #94a3b8;
      font-size: 14px;
    }
    
    .scroll-hint {
      position: fixed;
      bottom: 40px;
      left: 50%;
      transform: translateX(-50%);
      color: #94a3b8;
      font-size: 14px;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 8px;
      opacity: 0.8;
      animation: bounce 2s infinite;
      pointer-events: none;
    }
    
    @keyframes bounce {
      0%, 100% { transform: translate(-50%, 0); }
      50% { transform: translate(-50%, -10px); }
    }
    
    .scroll-hint svg {
      width: 24px;
      height: 24px;
    }

    @media (prefers-reduced-motion: reduce) {
      *, *::before, *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
      }
    }
  </style>
</head>
<body>
  <header>
    <h1>人工智慧發展大事記</h1>
    <p>透過互動時間軸，探索 AI 研究的高峰與低谷</p>
  </header>

  <section class="intro-section">
    <p>
      人工智慧的發展歷程充滿<span class="highlight">起伏波折</span>。從 1950 年代的<span class="highlight wave">樂觀浪潮</span>，到多次的<span class="highlight crisis">AI 寒冬</span>，再到近年的<span class="highlight wave">深度學習革命</span>，這段歷史不僅是技術演進，更是人類對智慧本質探索的縮影。
    </p>
  </section>

  <div class="spacer"></div>

  <!-- 翻卡 1：1956 達特茅斯會議 -->
  <div class="timeline-event">
    <div class="flip-card" data-flip-trigger>
      <div class="card-inner">
        <div class="card-face card-front">
          <div class="card-front-placeholder">
            <h3>1956<br>達特茅斯會議<br>AI 誕生</h3>
          </div>
        </div>
        <div class="card-face card-back">
          <span class="event-tag tag-peak">● 突破性發現</span>
          <div class="event-year">1956</div>
          <h2 class="event-title">達特茅斯會議：人工智慧的誕生</h2>
          <div class="event-description">
            <p>John McCarthy、Marvin Minsky、Claude Shannon 等科學家齊聚達特茅斯學院，首次提出「人工智慧」一詞。這次會議標誌著 AI 作為獨立學科的誕生。</p>
            <div class="event-impact">
              <strong>影響力</strong>
              <p>開啟了長達數十年的 AI 研究浪潮，奠定符號推理、問題求解等基礎範式。</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Focus Mode 章節 1：黃金時代 -->
  <section class="research-phase" data-section>
    <div class="phase-header">
      <span class="phase-period">1956-1974</span>
    </div>
    <h2 class="phase-title">黃金時代：早期的樂觀主義</h2>
    <div class="phase-content">
      <p>
        在達特茅斯會議後，AI 研究進入<span class="highlight wave">第一個黃金時代</span>。研究者們開發出能夠<span class="highlight">證明數學定理</span>、<span class="highlight">下西洋棋</span>、<span class="highlight">理解自然語言</span>的程式，展現出驚人的潛力。
      </p>
      <p>
        LISP 語言的發明、專家系統的雛形、機器學習的早期探索，都在這個時期開花結果。許多研究者預測，<span class="highlight">通用人工智慧將在 20 年內實現</span>。
      </p>
      <div class="key-researchers">
        <strong>關鍵人物</strong>
        Herbert Simon 預言：「機器將在 20 年內能做任何人類能做的工作」（1965）
      </div>
    </div>
  </section>

  <div class="spacer"></div>

  <!-- 翻卡 2：第一次 AI 寒冬 -->
  <div class="timeline-event">
    <div class="flip-card" data-flip-trigger>
      <div class="card-inner">
        <div class="card-face card-front">
          <div class="card-front-placeholder">
            <h3>1974-1980<br>第一次 AI 寒冬<br>資金與信心危機</h3>
          </div>
        </div>
        <div class="card-face card-back">
          <span class="event-tag tag-valley">● 研究低谷</span>
          <div class="event-year">1974</div>
          <h2 class="event-title">第一次 AI 寒冬</h2>
          <div class="event-description">
            <p>過度樂觀的預測未能兌現，英美政府大幅削減 AI 研究經費。Lighthill Report 嚴厲批評 AI 研究缺乏實際成果。</p>
            <div class="event-impact">
              <strong>核心問題</strong>
              <p>組合爆炸、常識知識難以形式化、運算資源不足等根本性挑戰浮現。</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Focus Mode 章節 2：專家系統時代 -->
  <section class="research-phase" data-section>
    <div class="phase-header">
      <span class="phase-period">1980-1987</span>
    </div>
    <h2 class="phase-title">專家系統的復興與商業化</h2>
    <div class="phase-content">
      <p>
        1980 年代，<span class="highlight wave">專家系統</span>帶來 AI 的第二次春天。MYCIN、DENDRAL 等系統在<span class="highlight">醫療診斷</span>和<span class="highlight">化學分析</span>領域展現實用價值，吸引大量商業投資。
      </p>
      <p>
        日本啟動<span class="highlight">第五代電腦計畫</span>，投入巨額經費研發基於邏輯推理的智慧系統。美國和歐洲緊跟其後，掀起 AI 投資熱潮。
      </p>
      <div class="key-researchers">
        <strong>代表成果</strong>
        專家系統市場規模達到數十億美元，但維護成本高昂、知識獲取困難的問題逐漸浮現。
      </div>
    </div>
  </section>

  <div class="spacer"></div>

  <!-- 翻卡 3：第二次 AI 寒冬 -->
  <div class="timeline-event">
    <div class="flip-card" data-flip-trigger>
      <div class="card-inner">
        <div class="card-face card-front">
          <div class="card-front-placeholder">
            <h3>1987-1993<br>第二次 AI 寒冬<br>專家系統泡沫破滅</h3>
          </div>
        </div>
        <div class="card-face card-back">
          <span class="event-tag tag-valley">● 產業危機</span>
          <div class="event-year">1987</div>
          <h2 class="event-title">第二次 AI 寒冬：專家系統的衰落</h2>
          <div class="event-description">
            <p>專家系統的局限性暴露無遺：難以擴展、維護成本極高、無法處理不確定性。桌上型電腦的普及使專用 AI 硬體失去市場。</p>
            <div class="event-impact">
              <strong>轉折點</strong>
              <p>AI 研究轉向更踏實的機器學習方法，但「AI」一詞在商業上成為禁忌。</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Focus Mode 章節 3：機器學習崛起 -->
  <section class="research-phase" data-section>
    <div class="phase-header">
      <span class="phase-period">1993-2011</span>
    </div>
    <h2 class="phase-title">機器學習的靜默革命</h2>
    <div class="phase-content">
      <p>
        在 AI 寒冬過後，研究者們轉向<span class="highlight">統計學習</span>和<span class="highlight">概率方法</span>。支持向量機（SVM）、隨機森林等演算法在實際應用中取得成功，但刻意避免使用「AI」標籤。
      </p>
      <p>
        這個時期的<span class="highlight">關鍵轉變</span>是：從手工設計規則轉向從數據中學習模式。雖然進展穩定，但缺乏突破性成果，研究主要集中在學術界。
      </p>
      <div class="key-researchers">
        <strong>重要里程碑</strong>
        1997 年 IBM 深藍擊敗國際象棋冠軍 Kasparov，但被視為暴力計算而非真正智慧。
      </div>
    </div>
  </section>

  <div class="spacer"></div>

  <!-- 翻卡 4：深度學習革命 -->
  <div class="timeline-event">
    <div class="flip-card" data-flip-trigger>
      <div class="card-inner">
        <div class="card-face card-front">
          <div class="card-front-placeholder">
            <h3>2012<br>深度學習突破<br>ImageNet 革命</h3>
          </div>
        </div>
        <div class="card-face card-back">
          <span class="event-tag tag-peak">● 範式轉移</span>
          <div class="event-year">2012</div>
          <h2 class="event-title">ImageNet 時刻：深度學習的勝利</h2>
          <div class="event-description">
            <p>Geoffrey Hinton 團隊的 AlexNet 在 ImageNet 競賽中以壓倒性優勢獲勝，錯誤率比第二名低 10.8%。這標誌著深度學習時代的開啟。</p>
            <div class="event-impact">
              <strong>技術突破</strong>
              <p>GPU 加速、大數據、ReLU 激活函數、Dropout 正則化的結合，終於讓深度神經網路展現潛力。</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Focus Mode 章節 4：AI 春天 -->
  <section class="research-phase" data-section>
    <div class="phase-header">
      <span class="phase-period">2012-現在</span>
    </div>
    <h2 class="phase-title">深度學習時代：新的黃金年代</h2>
    <div class="phase-content">
      <p>
        自 2012 年後，AI 進入<span class="highlight wave">爆發式發展期</span>。<span class="highlight">影像識別</span>、<span class="highlight">語音辨識</span>、<span class="highlight">機器翻譯</span>、<span class="highlight">自動駕駛</span>等領域取得突破性進展。
      </p>
      <p>
        2016 年 AlphaGo 擊敗李世乭，2017 年 Transformer 架構發表，2022 年 ChatGPT 引發全球轟動。AI 不再是實驗室技術，而是<span class="highlight wave">改變社會的力量</span>。
      </p>
      <p>
        然而，<span class="highlight crisis">新的挑戰</span>也浮現：模型可解釋性、偏見問題、能源消耗、安全性風險、就業衝擊等。我們是否會迎來<span class="highlight crisis">第三次 AI 寒冬</span>？還是終將實現<span class="highlight">通用人工智慧</span>？
      </p>
      <div class="key-researchers">
        <strong>當前思考</strong>
        歷史告訴我們：技術進步從來不是線性的，而是充滿波折的螺旋上升。
      </div>
    </div>
  </section>

  <footer>
    <p>© 學術研究互動大事記範例 | 使用原生 JavaScript + CSS 實現三種 scroll 觸發效果</p>
    <p style="margin-top: 12px; font-size: 12px; color: #64748b;">
      翻卡效果 | Focus Mode | 動態底線
    </p>
  </footer>

  <div class="scroll-hint">
    <span>向下滾動探索</span>
    <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
    </svg>
  </div>

  <script>
    // 節流函數
    function throttle(fn, wait = 100) {
      let last = 0, timer;
      return function(...args) {
        const now = Date.now();
        if (now - last >= wait) {
          last = now;
          fn.apply(this, args);
        } else {
          clearTimeout(timer);
          timer = setTimeout(() => {
            last = Date.now();
            fn.apply(this, args);
          }, wait - (now - last));
        }
      };
    }

    // 1) 翻卡效果：當卡片中心到達視窗 50% 時翻轉
    (function initFlipCards() {
      const cards = document.querySelectorAll('[data-flip-trigger]');
      
      function checkFlip() {
        cards.forEach(card => {
          if (card.dataset.flipped) return;
          
          const rect = card.getBoundingClientRect();
          const center = rect.top + rect.height / 2;
          const mid = window.innerHeight * 0.5;
          const tolerance = window.innerHeight * 0.08;
          
          if (Math.abs(center - mid) <= tolerance) {
            card.classList.add('flipped');
            card.dataset.flipped = '1';
          }
        });
      }
      
      window.addEventListener('scroll', throttle(checkFlip, 80), { passive: true });
      window.addEventListener('resize', throttle(checkFlip, 120));
      checkFlip();
    })();

    // 2) Focus Mode：當章節底部接近離開視窗時聚焦
    (function initFocusMode() {
      const sections = Array.from(document.querySelectorAll('[data-section]'));
      if (sections.length === 0) return;

      function applyFocus() {
        let focal = null;
        const threshold = 150;
        
        for (const section of sections) {
          const rect = section.getBoundingClientRect();
          const distanceToBottom = window.innerHeight - rect.bottom;
          
          if (rect.top < window.innerHeight && 
              rect.bottom > 0 && 
              distanceToBottom < threshold && 
              distanceToBottom > -threshold) {
            focal = section;
            break;
          }
        }
        
        if (focal) {
          document.body.classList.add('focus-mode');
          sections.forEach(s => s.classList.toggle('is-focal', s === focal));
        } else {
          document.body.classList.remove('focus-mode');
          sections.forEach(s => s.classList.remove('is-focal'));
        }
      }
      
      window.addEventListener('scroll', throttle(applyFocus, 80), { passive: true });
      window.addEventListener('resize', throttle(applyFocus, 120));
      applyFocus();
    })();

    // 3) 動態底線：當關鍵詞進入視窗時展開底線
    (function initHighlights() {
      const highlights = document.querySelectorAll('.highlight');
      if (highlights.length === 0) return;
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('active');
          } else {
            entry.target.classList.remove('active');
          }
        });
      }, {
        root: null,
        rootMargin: '0px 0px -15% 0px',
        threshold: 0.1
      });
      
      highlights.forEach(h => observer.observe(h));
    })();

    // 隱藏滾動提示
    let scrolled = false;
    window.addEventListener('scroll', function() {
      if (!scrolled && window.scrollY > 100) {
        scrolled = true;
        const hint = document.querySelector('.scroll-hint');
        if (hint) hint.style.opacity = '0';
      }
    }, { passive: true });
  </script>
</body>
</html>
